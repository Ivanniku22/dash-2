{
  "version": 3,
  "sources": ["../../node_modules/@mui/joy/styles/CssVarsProvider.js", "../../node_modules/@mui/joy/styles/ThemeProvider.js", "../../node_modules/@mui/joy/styles/StyledEngineProvider.js"],
  "sourcesContent": ["'use client';\n\n// do not remove the following import (https://github.com/microsoft/TypeScript/issues/29808#issuecomment-1320713018)\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-ignore\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: 'data-joy-color-scheme',\n  modeStorageKey: 'joy-mode',\n  colorSchemeStorageKey: 'joy-color-scheme',\n  defaultColorScheme: {\n    light: 'light',\n    dark: 'dark'\n  }\n});\nexport { CssVarsProvider, useColorScheme, getInitColorSchemeScript };", "'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider, useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport extendTheme from './extendTheme';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useTheme = () => {\n  const theme = useSystemTheme(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  // @ts-ignore internal logic\n  return theme[THEME_ID] || theme;\n};\nexport default function ThemeProvider({\n  children,\n  theme: themeInput\n}) {\n  let theme = defaultTheme;\n  if (themeInput) {\n    theme = extendTheme(THEME_ID in themeInput ? themeInput[THEME_ID] : themeInput);\n  }\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    theme: theme,\n    themeId: themeInput && THEME_ID in themeInput ? THEME_ID : undefined,\n    children: children\n  });\n}", "export { StyledEngineProvider as default } from '@mui/system';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAKA;AAGA,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AACF,IAAI,sBAAsB;AAAA,EACxB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,uBAAuB;AAAA,EACvB,oBAAoB;AAAA,IAClB,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AACF,CAAC;;;ACpBD,YAAuB;AACvB;AAIA,yBAA4B;;;ACP5B;",
  "names": []
}
